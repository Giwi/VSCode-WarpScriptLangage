
export interface IEntry { description?: string; signature?: string; }
export interface IEntries { [name: string]: IEntry; }

export var globalfunctions: IEntries = {"DOUBLEEXPONENTIALSMOOTHING":{"description":"Apply double exponential smoothing on a gts."},"EVERY":{"description":"Executes the macro at the given interval (Mobius endpoint)."},"EXPM1":{"description":"Computes exp^x - 1."},"FINDSETS":{"description":"Extracts classes and label values of matching GTS."},"FUSE":{"description":"Merge chunks of GTS together."},"GROOVY":{"description":"Executes a script expressed in Groovy."},"HYPOT":{"description":"Returns sqrt(x²+y²) without intermediate overflow or underflow."},"IMMUTABLE":{"description":"Replaces a map/list/set with an unmodifiable version."},"JS":{"description":"Executes a script expressed in JavaScript."},"LOG1P":{"description":"Computes the natural logarithm of the top of the stack plus one."},"LUA":{"description":"Executes a script expressed in Lua."},"ONLYBUCKETS":{"description":"Removes ticks which do not fall on bucket boundaries."},"PAPPLY":{"description":"Behaves like APPLY except returned GTS are grouped by equivalence classes."},"PFILTER":{"description":"Behaves like FILTER except returned GTS are grouped by equivalence classes."},"PYTHON":{"description":"Executes a script expressed in Python."},"QCONJUGATE":{"description":"Compute the conjugate of a quaternion."},"QDIVIDE":{"description":"Divide a quaternion q by a quaternion r"},"QMULTIPLY":{"description":"Multiply a quaternion q by a quaternion r"},"QROTATE":{"description":"Rotate a vector by a quaternion"},"QROTATION":{"description":"Extract the axis and angle of the rotation represented by the quaternion on the stack."},"R":{"description":"Execute a script in R syntax."},"ROTATIONQ":{"description":"Create a quaternion from an axis and rotation angle (in degrees)"},"R->":{"description":"Convert R types back to WarpScript types."},"RUBY":{"description":"Executes a script expressed in Ruby."},"STACKATTRIBUTE":{"description":"Extract the stack attributes and push them on top of the stack"},"->Q":{"description":"Converts 4 double to a unit quaternion."},"ULP":{"description":"Returns the size of an Units in the Last Place of the top of the stack."},"max.tick.sliding.window":{"description":"Max tick value in a sliding window."},"max.time.sliding.window":{"description":"Max time of a sliding window."},"op.and.ignore-nulls":{"description":"Pushes onto the stack an operator to perform a logical and between values of multiple GTS. Null values will be ignored."},"op.or.ignore-nulls":{"description":"Pushes onto the stack an operator to perform a logical or between values of multiple GTS. Null values will be ignored."},"reducer.percentile":{"description":"Push onto the stack a reducer to return the Nth percentile of the values for each tick."},"reducer.sd.forbid-nulls":{"description":"Push onto the stack a reducer to compute the standard deviation (with or without Bessel\\'s correction) of the values for each tick, null values lead to a null result."},"reducer.var.forbid-nulls":{"description":"Push onto the stack a reducer to compute the variance (with or without Bessel\\'s correction) of the values for each tick. Missing (null) values lead to a null result."},"Macros":{"description":"Macros allow users to define new functions combining existing WarpScript functions and operations"},"SENSISION.EVENT":{"description":"Emits a Sensision event."},"SENSISION.GET":{"description":"Set a value for a Sensision metric."},"SENSISION.SET":{"description":"Set a value for a Sensision metric."},"SENSISION.UPDATE":{"description":"Update a value for a numerical Sensision metric."},"CEVAL":{"description":"Execute macros concurrently."},"SYNC":{"description":"Execute a macro in a synchronized manner inside of a CEVAL call."},"JSON->":{"description":"Parses a string as JSON and pushes the result onto the stack."},"PICKLE->":{"description":"Decodes Pickle content."},"TOBIN":{"description":"Converts a long to its binary representation."},"TOBOOLEAN":{"description":"Converts number or string to boolean"},"TODOUBLE":{"description":"Convert a number to double"},"TOLONG":{"description":"Convert a number to long"},"TOSTRING":{"description":"Convert the argument to string"},"TOTIMESTAMP":{"description":"Converts an ISO8601 date/time string into a number of time units."},"CALL":{"description":"Invoke an external program."},"CUDF":{"description":"Invoke a possibly cached version of a UDF."},"UDF":{"description":"Invoke a UDF."},"->BIN":{"description":"Converts a string to its binary representation."},"->HEX":{"description":"Converts a string to the hexadecimal representation of its UTF-8 encoding."},"B64->":{"description":"Decodes a base64 encoded string."},"B64TOHEX":{"description":"Decodes a base64 encoded string and immediately re-encode it in hex."},"B64URL->":{"description":"Decodes a base64url encoded string."},"BIN->":{"description":"Decode a String in binary."},"BINTOHEX":{"description":"Decodes a binary encoded string and immediately re-encode it in hex."},"BYTES->":{"description":"Converts a bytes array into a string"},"FROMBIN":{"description":"Converts a binary representation of a long into a long."},"FROMHEX":{"description":"Converts an hexadecimal representation into a long."},"HASH":{"description":"Computes a 64 bits hash of the string on top of the stack."},"HEX->":{"description":"Decodes an hex encoded string."},"HEXTOB64":{"description":"Decodes a hex encoded string and immediately re-encode it in base64."},"HEXTOBIN":{"description":"Decodes a hex encoded string and immediately re-encode it in binary."},"JOIN":{"description":"Join N strings with the given separator"},"MATCH":{"description":"Apply a regular expression to a string"},"MATCHER":{"description":"Builds a compiled object form a regular expression."},"OBP64->":{"description":"Decodes an order preserving base64 encoded string."},"OPB64TOHEX":{"description":"Decodes an order preserving base64 encoded string and immediately re-encode it in hex."},"REPLACE":{"description":"Replaces the first substring of the input string that matches the given regular expression with the given replacement."},"REPLACEALL":{"description":"Replaces all substrings of the input string that matches the given regular expression with the given replacement."},"SPLIT":{"description":"Split a string in segments"},"SUBSTRING":{"description":"Extracts a substring from a string."},"TEMPLATE":{"description":"Fills a template with values contained in a map."},"->B64":{"description":"Encodes a string in base64."},"->B64URL":{"description":"Encodes a string in base64url."},"->BYTES":{"description":"Converts a string into its bytes given a charset"},"TOHEX":{"description":"Converts a long to its 64 bits hexadecimal representaiton."},"TOLOWER":{"description":"Converts the string on top of the stack to lower case."},"->OPB64":{"description":"Encodes a string in order preserving base64."},"TOUPPER":{"description":"Converts the string on top of the stack to upper case."},"TRIM":{"description":"Trims whitespaces from both ends of the string on top of the stack."},"URLDECODE":{"description":"Decode an URL encoded string"},"URLENCODE":{"description":"URL Encode a string"},"UUID":{"description":"Generates a UUID and pushes it on top of the stack."},"ADDDAYS":{"description":"Adds a certain number of days to a timestamp."},"ADDMONTHS":{"description":"Adds a certain number of months to a timestamp."},"ADDYEARS":{"description":"Adds a certain number of years to a timestamp."},"AGO":{"description":"Computes a timestamp from an offset in time units."},"DURATION":{"description":"Transform an ISO8601 duration into microsecondes"},"HUMANDURATION":{"description":"Convert a number of time units into a human readable duration."},"ISO8601":{"description":"Transform a timestamp into a date in ISO 8601 format"},"ISODURATION":{"description":"Convert a number of time units into an ISO8601 duration string."},"MSTU":{"description":"Push onto the stack a the number of time units in a millisecond"},"NOTAFTER":{"description":"Checks that the current time is not after the provided timestamp. Fails otherwise."},"NOTBEFORE":{"description":"Checks that the current time is not before the provided timestamp. Fails otherwise."},"NOW":{"description":"Push on the stack the current time in microseconds since the Unix Epoch"},"STU":{"description":"Push onto the stack a the number of time units in a second"},"->TSELEMENTS":{"description":"Replaces the timestamp with an array of its elements"},"TSELEMENTS":{"description":"Replaces the timestamp with an array of its elements"},"TSELEMENTS->":{"description":"Converts various timestamp\\'s elements into a timestamp for a given timezone"},"AESUNWRAP":{"description":"Unwrap wrapped byte array "},"AESWRAP":{"description":"Wrap a byte array or String with AES cypher"},"MD5":{"description":"Message Digest of a byte array with the cryptographic hash function MD5."},"RSADECRYPT":{"description":"Decrypt encoded data using RSA"},"RSAENCRYPT":{"description":"Encrypt data using RSA keys"},"RSAGEN":{"description":"Generates a RSA key pair."},"RSAPRIVATE":{"description":"Produce a RSA private key from a parameter map."},"RSAPUBLIC":{"description":"Produce a RSA public key from a parameter map."},"RSASIGN":{"description":"Sign data using RSA and a hash algorithm."},"RSAVERIFY":{"description":"Sign data using RSA and a hash algorithm."},"SHA1":{"description":"Message Digest of a byte array with the cryptographic hash function SHA1."},"SHA1HMAC":{"description":"Computes a Hash-based Message Authentication Code (HMAC) that uses a key in conjunction with a SHA-1 cryptographic hash function."},"SHA256":{"description":"Message Digest of a byte array with the cryptographic hash function SHA256."},"SHA256HMAC":{"description":"Computes a Hash-based Message Authentication Code (HMAC) that uses a key in conjunction with a SHA-256 cryptographic hash function."},"GZIP":{"description":"Compresses a byte array or String"},"->Z":{"description":"Builds a z-value."},"UNGZIP":{"description":"Decompresses a compressed byte array."},"Z->":{"description":"Decomposes a Z-Value."},"AUTHENTICATE":{"description":"Authenticates the current stack."},"BOOTSTRAP":{"description":"Function executed before the WarpScript stack becomes available."},"CLEAR":{"description":"Remove all elements from the stack"},"CLEARDEFS":{"description":"Clear redefined WarpScript functions."},"CLEARSYMBOLS":{"description":"Clear all symbols name of the stack."},"CLEARTOMARK":{"description":"Removes elements from the stack up to and including the first mark encountered."},"COUNTTOMARK":{"description":"Counts the number of elements on the stack up to but excluding the first mark encountered."},"CSTORE":{"description":"Conditionnaly store the element below the top of the stack under the symbol name on top of the stack"},"DEBUGOFF":{"description":"Turns off stack debugging."},"DEBUGON":{"description":"Turns on stack debugging."},"DEF":{"description":"Define or redefine a WarpScript function."},"DEPTH":{"description":"Push on the stack the depth of the stack"},"DOC":{"description":"Defines the documentation string for a macro."},"DOCMODE":{"description":"Turns on documentation mode."},"DROP":{"description":"Remove the top element from the stack"},"DROPN":{"description":"Remove the N top elements from the stack"},"DUP":{"description":"Duplicates the top of the stack"},"DUPN":{"description":"Duplicates the N top of the stack"},"ELAPSED":{"description":"Pushes on the stack the collected timing informations."},"EXPORT":{"description":"Sets or updates the list of exported symbols"},"LOAD":{"description":"Pushes onto the stack the value of the symbol whose name is on the stack."},"MARK":{"description":"Pushes a mark onto the stack."},"NDEBUGON":{"description":"Turns on stack debugging, specifying the number of stack levels to return in case of error."},"NOTIMINGS":{"description":"Turns off timing collection."},"PICK":{"description":"Copies onto the top of the stack the n-th element of the stack"},"RESET":{"description":"Reset the stack to a specific depth."},"REXEC":{"description":"Executes some WarpScript on a remote Warp 10."},"ROLL":{"description":"Moves the N-th element of the stack onto the top"},"ROLLD":{"description":"Moves the element on top of the stack to the N-th position"},"ROT":{"description":"Move the third element of the stack onto the top"},"RUN":{"description":"Executes the macro whose name is on the stack."},"SNAPSHOT":{"description":"Converts the content of the stack into WarpScript code."},"SNAPSHOTALL":{"description":"Converts the content of the stack and current symbols into WarpScript code."},"SNAPSHOTALLTOMARK":{"description":"Converts the content of the stack above a MARK and current symbols into WarpScript code."},"SNAPSHOTTOMARK":{"description":"Converts part of the stack into WarpScript code."},"STACKTOLIST":{"description":"Convert the whole stack into a list and push this list on the top of the stack."},"STORE":{"description":"Store the element below the top of the stack under the symbol name on top of the stack"},"SWAP":{"description":"Swap the two two elements of the stack"},"TIMINGS":{"description":"Turns on timing collection."},"TYPEOF":{"description":"Pushes onto the stack the type of the element on top of the stack."},"EVALSECURE":{"description":"Evaluates the secured script on top of the stack"},"HEADER":{"description":"Set a header which will be returned with the HTTP response."},"IDENT":{"description":"Pushes on the stack the ident string of the running platform."},"JSONLOOSE":{"description":"Generate a loose JSON version (with NaN and Infinite values allowed) of the stack"},"JSONSTRICT":{"description":"Generate a JSON version of the stack"},"LIMIT":{"description":"Modifies the maximum number of datapoints which can be fetched during a script execution."},"MAXBUCKETS":{"description":"Modifies the maximum number of buckets which can be created by a call to BUCKETIZE."},"MAXDEPTH":{"description":"Modifies the maximum depth of the stack."},"MAXGTS":{"description":"Modifies the maximum number of Geo Time Series which can be retrieved."},"MAXLOOP":{"description":"Modifies the upper limit of time which can be spent in a loop."},"MAXOPS":{"description":"Modifies the maximum number of WarpScript operations which can be performed during a single execution."},"MAXSYMBOLS":{"description":"Modifies the maximum number of symbols which can be created during a single WarpScript execution."},"NOOP":{"description":"Does absolutely nothing, but does it well!"},"OPS":{"description":"Pushes onto the stack the current number of operations which were performed by the WarpScript code execution."},"RESTORE":{"description":"Restores the stack context."},"REV":{"description":"Pushes on the stack the revision string of the running platform."},"RTFM":{"description":"There is always a documentation for your function"},"SAVE":{"description":"Pushes on the stack its current context."},"SECUREKEY":{"description":"Set the secure key for creating secure scripts."},"TOKENINFO":{"description":"Extracts information on the token on top of the stack"},"UNSECURE":{"description":"Retrieve the original script from a secure script."},"URLFETCH":{"description":"Retrieves the content of a URL."},"WEBCALL":{"description":"Makes an outbound HTTP call."},"ABS":{"description":"Calculates the absolute value of a number"},"AND":{"description":"This is synonymous for &&."},"^":{"description":"Computes the bitwise XOR of the two arguments"},"CBRT":{"description":"Calculate the cubic root"},"CEIL":{"description":"Round a number to the nearest bigger long"},"COPYSIGN":{"description":"Copies the sign of a number on another one."},"DOUBLEBITS->":{"description":"Converts the long on top of the stack to a double by considering the long value as the raw bits of the double."},"EXP":{"description":"Return e raised to the power of the argument"},"FLOATBITS->":{"description":"Converts the long on top of the stack to a double by considering the long value as the raw bits of a float."},"FLOOR":{"description":"Round a number to the nearest smaller long"},">":{"description":"Verify if the first parameter is greater than the second"},"IEEEREMAINDER":{"description":"For parameters \\'f1\\' and \\'f2\\', it calculates the remainder when \\'f1\\' is divided by \\'f2"},"ISNULL":{"description":"Checks whether the top of the stack is null."},"ISNaN":{"description":"Checks whether a double is NaN."},"LBOUNDS":{"description":"Pushes onto the stack a list of M+1 bounds defining M intervals between a and b plus the intervals before a and after b."},"<<":{"description":"Left shifting of bit pattern."},"LOG":{"description":"Calculate the natural logarithm"},"LOG10":{"description":"Calculate the common logarithm"},"<":{"description":"Verify if the first parameter is lesser than the second"},"MAX":{"description":"Calculates the maximum of two numbers"},"MIN":{"description":"Calculates the minimum of two numbers"},"%":{"description":"Calculates the remainder of the division of two numbers"},"NBOUNDS":{"description":"Pushes a list of n-1 bounds defining n intervals with equal area under the bell cureve N(mu,sigma)."},"NEXTAFTER":{"description":"Returns the DOUBLE adjacent to the first argument in the direction of the second argument"},"NEXTUP":{"description":"Returns the DOUBLE  adjacent to the argument in the direction of positive infinity"},"!":{"description":"Apply the logical function NOT"},"NOT":{"description":"Negates the boolean on the stack."},"NPDF":{"description":"Parametrable function to create NDPF (Normal Distribution Probability Density Functions)"},"OR":{"description":"Do a boolean OR between booleans on the stack."},"PROBABILITY":{"description":"Pushes on the stack a function which computes probabilities according to a provided value histogram."},"RAND":{"description":"Push on the stack a random number between 0 and 1"},"RANDPDF":{"description":"Pushes on the stack a function which emits values according to a provided value histogram."},"REVBITS":{"description":"Reverse the bits of the long on top of the stack."},">>":{"description":"Signed right bit shift."},"RINT":{"description":"Return the DOUBLE closest to the value and equal to a mathematical integer"},"ROUND":{"description":"Round a number to the closest long"},"SIGNUM":{"description":"Return the signum of a number"},"SQRT":{"description":"Calculate the square root"},"-":{"description":"Substract two numbers"},"->DOUBLEBITS":{"description":"Converts a double to a long value of the raw bits of its representation."},"->FLOATBITS":{"description":"Converts a double to a long value of the raw bits of its float representation."},">>>":{"description":"Unsigned right bit shift, setting the most significant bit to 0."},"->PICKLE":{"description":"Converts the object on top of the stack to its PICKLE representation."},"ACOS":{"description":"Calculate the arccosine"},"ASIN":{"description":"Calculate the arcsine"},"ATAN":{"description":"Calculate the arctangent"},"COS":{"description":"Calculate the cosine"},"COSH":{"description":"Calculate the hyperbolic cosine"},"SIN":{"description":"Calculate the sine"},"SINH":{"description":"Calculate hyperbolic sine"},"TAN":{"description":"Calculate the tangent"},"TANH":{"description":"Calculate the hyperbolic tangent"},"TODEGREES":{"description":"Convert from radians to degrees"},"TORADIANS":{"description":"Convert from degrees to radians"},"d":{"description":"Convert a timestamp expressed in days to the time unit used by the platform"},"h":{"description":"Convert a timestamp expressed in hours to the time unit used by the platform"},"m":{"description":"Convert a timestamp expressed in minutes to the time unit used by the platform"},"ms":{"description":"Convert a timestamp expressed in milliseconds to the time unit used by the platform"},"ns":{"description":"Convert a timestamp expressed in nanoseconds to the time unit used by the platform"},"ps":{"description":"Convert a timestamp expressed in picoseconds to the time unit used by the platform"},"s":{"description":"Convert a timestamp expressed in seconds to the time unit used by the platform"},"us":{"description":"Convert a timestamp expressed in microseconds to the time unit used by the platform"},"w":{"description":"Convert a timestamp expressed in weeks to the time unit used by the platform"},"COUNTER":{"description":"Push a counter (AtomicLong) onto the stack."},"COUNTERDELTA":{"description":"Increment a counter."},"COUNTERVALUE":{"description":"Retrieve the value of a counter."},"RANGE":{"description":"Pushes onto the stack a list of integers in the given range."},"Q->":{"description":"Converts 4 double to a unit quaternion."},"BITCOUNT":{"description":"Computes the length of a bitset and the number of bits set."},"BITGET":{"description":"Gets a bit in a bits set."},"BITSTOBYTES":{"description":"Converts a bitset into a byte array."},"BYTESTOBITS":{"description":"Converts a byte array into a bitset."},"ASSERT":{"description":"Halt execution of the script if the top of the stack is not the BOOLEAN true"},"BREAK":{"description":"Break out of the current loop"},"CONTINUE":{"description":"Immediately start a new iteration in a running loop."},"DEFINED":{"description":"Check whether or not a symbol is defined"},"DEFINEDMACRO":{"description":"Checks if a macro is defined and pushes true or false on the stack accordingly."},"EVAL":{"description":"Evaluates the string on top of the stack"},"FAIL":{"description":"Halt execution of the script"},"FOR":{"description":"Implement a for loop"},"FOREACH":{"description":"Implement a foreach loop on a list or map"},"FORSTEP":{"description":"Implement a for loop with an index step"},"IFT":{"description":"Implement the if-then conditional"},"IFTE":{"description":"Implement the if-then-else conditional"},"MSGFAIL":{"description":"Halt execution of the script, returning the message on top of the stack."},"NRETURN":{"description":"Immediately exit N macros being executed."},"RETURN":{"description":"Immediately exit the macro being executed."},"STOP":{"description":"Immediately stop executing WarpScript."},"SWITCH":{"description":"Implement a switch-like conditional"},"UNTIL":{"description":"Implement an until loop"},"WHILE":{"description":"Implement a while loop"},"CLONEREVERSE":{"description":"Clone a LIST and reverse its order"},"CONTAINS":{"description":"Check if an element is in a LIST"},"CONTAINSKEY":{"description":"Check if an element is one of the keys of a MAP"},"CONTAINSVALUE":{"description":"Check if an element is one of the values of a MAP"},"FLATTEN":{"description":"Flatten a LIST"},"GET":{"description":"Retrieve a value in a MAP or in a LIST"},"KEYLIST":{"description":"Extract the keys of a MAP"},"LFLATMAP":{"description":"Apply a macro on each element of a list"},"LIST->":{"description":"Extract the elements of a LIST"},"LMAP":{"description":"Apply a macro on each element of a list"},"MAPID":{"description":"Generates a fingerprint of a map."},"MAT->":{"description":"Converts a Matrix into nested lists"},"MSORT":{"description":"Sort a MAP"},"PACK":{"description":"Pack a list of numeric or boolean values according to a specified format"},"SIZE":{"description":"Push on the stack the size of a LIST, map or GTS"},"SUBLIST":{"description":"Create a sub-LIST keeping only certain elements"},"SUBMAP":{"description":"Create a sub-MAP keeping only certain pairs key-value"},"->LIST":{"description":"Creates a LIST with the top `N` elements of the stack"},"->MAP":{"description":"Creates a MAP with the top `N` elements of the stack"},"->MAT":{"description":"Converts nested lists of numbers into a Matrix"},"->V":{"description":"Convert the list on top of the stack into a set"},"->VEC":{"description":"Converts a list of numbers into a Vector"},"UNIQUE":{"description":"Eliminates duplicate elements on a LIST"},"UNLIST":{"description":"Push onto the stack all elements of the list on top of a Mark."},"UNMAP":{"description":"Deconstructs a map, putting each key/value pair as two elements on the stack on top of a Mark."},"UNPACK":{"description":"Unpack a list of numeric or boolean values according to a specified format"},"VALUELIST":{"description":"Extract the values of a MAP"},"VEC->":{"description":"Converts a Vector into a list"},"V->":{"description":"Convert the set on top of the stack into a list"},"ZIP":{"description":""},"DIFFERENCE":{"description":"Computes the difference of two sets"},"INTERSECTION":{"description":"Computes the intersection of two sets."},"SET":{"description":"Replace an element in a list"},"SET->":{"description":"Converts the list on top of the stack into a set"},"->SET":{"description":"Converts the list on top of the stack into a set"},"UNION":{"description":"Performs the union of two sets."},"APPEND":{"description":"Append a LIST or MAP to another"},"LSORT":{"description":"Sort a LIST"},"PUT":{"description":"Insert a key-value pair into a MAP"},"REMOVE":{"description":"Remove an entry from a LIST or MAP"},"REVERSE":{"description":"Reverse the order of a LIST"},"GEOHASH->":{"description":"Converts a GeoHash to a lat/lon."},"GEOPACK":{"description":"Encode a geo zone into a compact representation."},"GEOREGEXP":{"description":"Produces a regexp from a GeoXPShape"},"GEOUNPACK":{"description":"Decodes a packed geo zone."},"GEO.DIFFERENCE":{"description":"Computes the difference of two GeoXP Shapes."},"GEO.INTERSECTION":{"description":"Computes the intersection of two GeoXP Shapes."},"GEO.INTERSECTS":{"description":"Checks if a Geo Time Series has at least one point within a shape."},"GEO.JSON":{"description":"Converts a GeoJSON string into a GeoXP Shape suitable for geo filtering"},"GEO.UNION":{"description":"Computes the union of two GeoXP Shapes."},"GEO.WITHIN":{"description":"Checks if a Geo Time Series has all its points within a shape."},"GEO.WKT":{"description":"Converts a Well Known Text String into a GeoXP Shape suitable for geo filtering"},"HAVERSINE":{"description":"Computes distance between two locations using the Haversine formula."},"HHCODE->":{"description":"Converts an HHCode to a lat/lon."},"->GEOHASH":{"description":"Converts lat/lon to a GeoHash."},"->HHCODE":{"description":"Converts lat/lon to an Helical Hyperspatial Code (HHCode)."},"CHUNK":{"description":"Chunks a GTS into partial GTS."},"CLIP":{"description":"Clip a Geo Time Series according to a series of limits."},"SHRINK":{"description":"Shrink the number of values of a GTS"},"TIMECLIP":{"description":"Clip a Geo Time Series to only retain ticks that are within a given time range"},"TIMEMODULO":{"description":"Split a Geo Time Serie into a LIST of GTS whose timestamps are original timestamps modulo a value passed as parameter"},"TIMESCALE":{"description":"Modify ticks by multiplying them by a scaling factor."},"TIMESHIFT":{"description":"Shift the ticks of a Geo Time Series"},"TIMESPLIT":{"description":"Splits a Geo Time Series at the quiet periods"},"CORRELATE":{"description":"Compute correlation between Geo Time Series"},"CPROB":{"description":"Computes a conditional probability of each value in a Geo Time Series"},"ISONORMALIZE":{"description":"Normalize (between -1 and 1) the values of a Geo Time Series"},"LOWESS":{"description":"Smooths a Geo Time Series using local regression"},"LTTB":{"description":"Downsamples a Geo Time Series using \\'Least Triangle Three Bucket\\'"},"MODE":{"description":"Compute the mode(s) for a given GTS"},"MONOTONIC":{"description":"Modifies the values of a Geo Time Series so it is monotonous."},"MUSIGMA":{"description":"Calculate the mean and the standard deviation of a Geo Time Series"},"NORMALIZE":{"description":"Normalize between 0 and 1 the values a Geo Time Series"},"NSUMSUMSQ":{"description":"Computes the cardinality, sum of values and sum of squared values of a Geo Time Series."},"PROB":{"description":"Computes the probability of each value in a Geo Time Series"},"RLOWESS":{"description":"Robust and iterative smoothing of a Geo Time Series"},"SINGLEEXPONENTIALSMOOTHING":{"description":"Smooth a Geo Time Series with the given smoothing factor alpha"},"STANDARDIZE":{"description":"Replace Geo Time Series values with their standardized score"},"TLTTB":{"description":"Downsamples a Geo Time Series using time based \\'Least Triangle Three Bucket\\'"},"VALUEHISTOGRAM":{"description":"Builds a value histogram for a GTS."},"DWTSPLIT":{"description":"Split a Geo Time Series produced by FDWT into a set of series based on the resolution level."},"FDWT":{"description":"Computes a Forward Discrete Wavelet Transform on a GTS."},"FFT":{"description":"Computes a Fast Fourier Transform on a GTS."},"FFTAP":{"description":"Computes a Fast Fourier Transform on a GTS, returning amplitude and phase."},"IDWT":{"description":"Computes an Inverse Discrete Wavelet Transform on a GTS."},"IFFT":{"description":"Computes an Inverse Fast Fourier Transform."},"CLONE":{"description":"Make a deep copy of a GTS"},"CLONEEMPTY":{"description":"Push onto the stack an empty clone of the argument GTS"},"COMMONTICKS":{"description":"Modifies Geo Time Series so they all have the same ticks, the set of ticks common to all input Geo Time Series."},"COMPACT":{"description":"Remove measurements which have the same value, location and elevation as the previous one"},"DEDUP":{"description":"Remove duplicate timestamps from a Geo Time Series"},"FILLTICKS":{"description":"Add values to a GTS at given ticks"},"INTEGRATE":{"description":"Integrate a Geo Time Serie"},"LASTSORT":{"description":"Sorts a list of Geo Time Series according to their most recent value."},"MERGE":{"description":"Merge two Geo Time Series"},"NONEMPTY":{"description":"Check whether or not a Geo Time Series has values"},"PARTITION":{"description":"Splits GTS in equivalence classes based on label values."},"QUANTIZE":{"description":"Generates a quantified version of a Geo Time Series."},"RANGECOMPACT":{"description":"Remove intermediate values on constant ranges of a GTS"},"RESETS":{"description":"Remove resets in Geo Time Series values"},"RSORT":{"description":"Sort a Geo Time Series by descending timestamps"},"RVALUESORT":{"description":"Sorts Geo Time Series by reverse order according to its values"},"SORT":{"description":"Sort a Geo Time Series by ascending timestamps"},"SORTBY":{"description":"Sort list of Geo Time Series according to values extracted by a macro"},"UNWRAP":{"description":"Decode a Geo Time Series previously encoded by WRAP."},"VALUEDEDUP":{"description":"Remove duplicate values from a Geo Time Series"},"VALUESORT":{"description":"Sorts Geo Time Series according to its values."},"VALUESPLIT":{"description":"Split a Geo Time Series into N distinct GTS, one for each distinct value"},"WRAP":{"description":"Efficiently encode a Geo Time Series or a list thereof into strings."},"WRAPRAW":{"description":"Efficiently encode a Geo Time Series or a list thereof into byte arrays."},"MAKEGTS":{"description":"Builds a GTS from arrays."},"NEWGTS":{"description":"Push an empty Geo Time Series onto the stack"},"PARSE":{"description":"Parse a STRING into a set of Geo Time Series"},"DELETE":{"description":"Delete a set of GTS."},"FETCH":{"description":"Fetch data from Warp10\\'s datastore"},"FETCHBOOLEAN":{"description":"Fetches data from the store, forcing the returned Geo Time Series to be of type BOOLEAN."},"FETCHDOUBLE":{"description":"Fetches data from the store, forcing the returned Geo Time Series to be of type DOUBLE."},"FETCHLONG":{"description":"Fetches data from the store, forcing the returned Geo Time Series to be of type LONG."},"FETCHSTRING":{"description":"Fetches data from the store, forcing the returned Geo Time Series to be of type STRING."},"FIND":{"description":"Find Geo Time Series matching some criteria"},"FINDSTATS":{"description":"Computes statistics on matching GTS."},"UPDATE":{"description":"Pushes datapoints to the Warp 10 backend."},"DISCORDS":{"description":"Detects discords in a Geo Time Series."},"DTW":{"description":"Computes similarity between two Geo Time Series using Dynamic Time Warping."},"OPTDTW":{"description":"Find the N optimal matches for a query sequence using Dynamic Time Warping."},"PATTERNDETECTION":{"description":"Detect patterns in a Geo Time Series."},"PATTERNS":{"description":"Extract patterns from a Geo Time Series."},"ZDISCORDS":{"description":"Detects discords in a standardized Geo Time Series."},"ZPATTERNDETECTION":{"description":"Detect patterns in a standardized Geo Time Series."},"ZPATTERNS":{"description":"Extract patterns from a standardized Geo Time Series."},"ZSCORE":{"description":"Normalize by the mean or median, using Z-score"},"ESDTEST":{"description":"Detect outliers using an generalized extreme studentized deviate test"},"GRUBBSTEST":{"description":"Detect outliers using a Grubbs\\' test"},"HYBRIDTEST":{"description":"Detect outliers using Seasonal Hybrid ESD test"},"HYBRIDTEST2":{"description":"Detect outliers using Seasonal Entropy Hybrid ESD test"},"STLESDTEST":{"description":"Detect outliers using seasonal extract and an generalized extreme studentized deviate test"},"THRESHOLDTEST":{"description":"Detect outliers using a threshold test"},"ZSCORETEST":{"description":"Detect outliers using a Zscore test"},"BBOX":{"description":"Computes the bounding box of a Geo Time Series"},"COPYGEO":{"description":"Forces the location elements of a GTS onto others."},"ELEVATIONS":{"description":"Push Geo Time Series elevations onto the stack"},"LOCATIONOFFSET":{"description":"Downsamples a Geo Time Series by retaining only those datapoints farther away than a threshold distance"},"LOCATIONS":{"description":"Push Geo Time Series latitudes and longitudes onto the stack"},"LOCSTRINGS":{"description":"Pushes encoded locations of Geo Time Series onto the stack"},"ATTRIBUTES":{"description":"Retrieves the attributes of a GTS."},"LABELS":{"description":"Push the labels of a Geo Time Series onto the stack"},"META":{"description":"Sets the attributes of a list of Geo Time Series in the Warp 10 backend."},"METASORT":{"description":"Sorts a list of Geo Time Series according to their metadata (class + labels)."},"NAME":{"description":"Push the class name of a Geo Time Series onto the stack"},"PARSESELECTOR":{"description":"Parse a Geo Time Series selector into a class selector and a labels selection MAP"},"RELABEL":{"description":"Modify the labels of a Geo Time Series"},"RENAME":{"description":"Rename a Geo Time Series"},"SETATTRIBUTES":{"description":"Set attributes of a GTS."},"TOSELECTOR":{"description":"Transform a class selector and a labels selection MAPs into a Geo Time Series selector"},"ADDVALUE":{"description":"Add a value to a GTS"},"ATINDEX":{"description":"Extract the timestamp, longitude, lattitude, elevation and value for the N-th point of the GTS"},"ATTICK":{"description":"Extract the timestamp, longitude, lattitude, elevation and value for a given timestamp of the GTS"},"FIRSTTICK":{"description":"Push onto the stack the timestamp of the first tick of a Geo Time Series"},"LASTTICK":{"description":"Push onto the stack the timestamp of the last tick of a Geo Time Series"},"SETVALUE":{"description":"Adds a value to a GTS, overwriting the value at the given timestamp."},"TICKINDEX":{"description":"Reindex the ticks of Geo Time Series"},"TICKLIST":{"description":"Push Geo Time Series ticks onto the stack"},"TICKS":{"description":"Push Geo Time Series timestamps onto the stack"},"VALUES":{"description":"Push Geo Time Series values onto the stack"},"ATBUCKET":{"description":"Extracts the data from a bucket of a Geo Time Series"},"BUCKETCOUNT":{"description":"Extract bucketcount from a bucketized Geo Time Series"},"BUCKETSPAN":{"description":"Extract bucketspan from a bucketized Geo Time Series"},"CROP":{"description":"Rebucketize a Geo Time Series"},"FILLNEXT":{"description":"Fill missing values in a bucketized Geo Time Series with the next known value"},"FILLPREVIOUS":{"description":"Fill missing values in a bucketized Geo Time Series with the last known value"},"FILLVALUE":{"description":"Fill missing values in a bucketized Geo Time Series with a constant"},"INTERPOLATE":{"description":"Fill gaps in bucketized Geo Time Series"},"LASTBUCKET":{"description":"Push the end timestamp of the last bucket of a bucketized Geo Time Series"},"STL":{"description":"Apply Seasonal Trend decomposition based on Loess procedure"},"UNBUCKETIZE":{"description":"Force a Geo Time Series to be un-bucketized"},"REDUCE":{"description":"Apply a reducer function to a set of Geo Time Series"},"MACROREDUCER":{"description":"Converts a macro into a reducer"},"reducer.and":{"description":"Compute and between the values"},"reducer.and.exclude-nulls":{"description":"Compute and between the values"},"reducer.argmax":{"description":"Returns the ticks and labels for the maximum value"},"reducer.argmin":{"description":""},"reducer.count":{"description":"Return the number of values"},"reducer.join":{"description":"Return a string concatenating all values"},"reducer.join.forbid-nulls":{"description":"Return a string concatenating all values excluding nulls"},"reducer.max":{"description":"Return the maximum of the values"},"reducer.max.forbid-nulls":{"description":"Return the maximum of the values excluding nulls"},"reducer.mean":{"description":"Return the mean of the values"},"reducer.mean.exclude-nulls":{"description":"Return the mean of the values"},"reducer.median":{"description":"Return the median of the values"},"reducer.min":{"description":"Return the minimum of the values"},"reducer.min.forbid-nulls":{"description":"Return the minimum of the values excluding nulls"},"reducer.or":{"description":"Compute or between the values"},"reducer.or.exclude-nulls":{"description":"Compute or between the values"},"reducer.sd":{"description":"Return the standard deviation of the values"},"reducer.shannonentropy.0":{"description":"Return the entropy of a sliding window. 0 if singleton."},"reducer.shannonentropy.1":{"description":"Return the entropy of a sliding window. 1 if singleton."},"reducer.sum":{"description":"Return the sum of the values"},"reducer.sum.forbid-nulls":{"description":"Return the sum of the values excluding nulls"},"reducer.var":{"description":"Return the variance of the values"},"MAP":{"description":"Apply a function on values of a Geo Time Series that fall into a sliding window"},"MACROMAPPER":{"description":"Converts a macro into a mapper"},"STRICTMAPPER":{"description":"Wrap a mapper to add a condition onto the number of values in the input sliding window"},"mapper.join":{"description":"Push onto the stack a mapper to return the concatenation of the string representation of values separated by a separator."},"mapper.npdf":{"description":"Push onto the stack a mapper to compute the probability of a value within a gaussian distribution with mu/sigma."},"mapper.percentile":{"description":"Push onto the stack a mapper to compute the Nth percentile of the values on the interval."},"mapper.truecourse":{"description":"Push onto the stack a mapper to compute the true course between points on a great circle."},"mapper.and":{"description":"Compute and between the values"},"mapper.count":{"description":"Counts the number of values"},"mapper.delta":{"description":"Return the delta between the last and first values"},"mapper.dotproduct":{"description":"Return the dotproduct of the values with a given LIST"},"mapper.dotproduct.positive":{"description":"Return the dotproduct of the values with a given LIST"},"mapper.dotproduct.sigmoid":{"description":"Return the dotproduct of the values with a given LIST"},"mapper.dotproduct.tanh":{"description":"Return the dotproduct of the values with a given LIST"},"mapper.eq":{"description":"Return the first value equal to a given value"},"mapper.first":{"description":"Return the first value"},"mapper.ge":{"description":"Return the first value greater or equal to a given value"},"mapper.gt":{"description":"Return the first value greater than a given value"},"mapper.hdist":{"description":"Return the horizontal distance"},"mapper.highest":{"description":"Return the value with the highest elevation"},"mapper.hspeed":{"description":"Return the horizontal speed"},"mapper.last":{"description":"Return the last value"},"mapper.le":{"description":"Return the first value lesser or equal to a given value"},"mapper.lowest":{"description":"Return the value with the highest elevation"},"mapper.lt":{"description":"Return the first value lesser than a given value"},"mapper.max.x":{"description":"Return the maximum between a constant and each value"},"mapper.mean":{"description":"Return the mean of the values"},"mapper.mean.circular":{"description":"Pushes onto the stack a mapper suitable for computing the circular mean of values"},"mapper.median":{"description":"Return the median of the values"},"mapper.min":{"description":"Return the minimum of the values"},"mapper.min.x":{"description":"Return the minimum between a constant and each value"},"mapper.ne":{"description":"Return the first value equal to a given value"},"mapper.or":{"description":"Compute or between the values"},"mapper.product":{"description":"Return the product of the values"},"mapper.rate":{"description":"Return the rate of change between the last and first values"},"mapper.replace":{"description":"Replace value with a constant"},"mapper.sd":{"description":"Return the standard deviation of the values"},"mapper.sum":{"description":"Return the sum of the values"},"mapper.var":{"description":"Return the variance of the values"},"mapper.vdist":{"description":"Return the vertical distance"},"mapper.vspeed":{"description":"Return the vertical speed"},"mapper.abs":{"description":"Return the absolute value of the single value in a sliding window"},"mapper.add":{"description":"Add a constant to value"},"mapper.ceil":{"description":"Round the single value in a sliding window to the closests greater LONG"},"mapper.day":{"description":"Return the day of the tick for which it is computed"},"mapper.exp":{"description":"Raise a constant to the value power"},"mapper.floor":{"description":"Round the single value in a sliding window to the closests lower LONG"},"mapper.hour":{"description":"Return the hour of the tick for which it is computed"},"mapper.log":{"description":"Take the log of the value"},"mapper.minute":{"description":"Return the minute of the tick for which it is computed"},"mapper.month":{"description":"Return the month of the tick for which it is computed"},"mapper.mul":{"description":"Multiply the value by a constant"},"mapper.todouble":{"description":"Convert the single value in a sliding window to DOUBLE"},"mapper.pow":{"description":"Raise the value to a constant power"},"mapper.round":{"description":"Round the single value in a sliding window to the closests LONG"},"mapper.second":{"description":"Return the second of the tick for which it is computed"},"mapper.sigmoid":{"description":"Return the sigmoid of the single value in a sliding window"},"mapper.tanh":{"description":"Return the hyperbolic tangent of the single value in a sliding window"},"mapper.tick":{"description":"Return the tick for which it is computed"},"mapper.toboolean":{"description":"Convert the single value in a sliding window to boolean"},"mapper.tolong":{"description":"Convert the single value in a sliding window to LONG"},"mapper.tostring":{"description":"Convert the single value in a sliding window to STRING"},"mapper.weekday":{"description":"Return the day of the week of the tick for which it is computed"},"mapper.year":{"description":"Return the year of the tick for which it is computed"},"mapper.kernel.cosine":{"description":"Push onto the stack a kernel smoothing mapper using a cosine kernel."},"mapper.kernel.epanechnikov":{"description":"Push onto the stack a kernel smoothing mapper using an epanechnikov kernel."},"mapper.kernel.gaussian":{"description":"Push onto the stack a kernel smoothing mapper using a gaussian kernel."},"mapper.kernel.logistic":{"description":"Push onto the stack a kernel smoothing mapper using a logistic kernel."},"mapper.kernel.quartic":{"description":"Push onto the stack a kernel smoothing mapper using a quartic kernel."},"mapper.kernel.silverman":{"description":"Push onto the stack a kernel smoothing mapper using a silverman kernel."},"mapper.kernel.triangular":{"description":"Push onto the stack a kernel smoothing mapper using a triangular kernel."},"mapper.kernel.tricube":{"description":"Push onto the stack a kernel smoothing mapper using a tricube kernel."},"mapper.kernel.triweight":{"description":"Push onto the stack a kernel smoothing mapper using a triweight kernel."},"mapper.kernel.uniform":{"description":"Push onto the stack a kernel smoothing mapper using a uniform kernel."},"mapper.geo.approximate":{"description":"Push onto the stack a mapper to approximate a location at the given resolution."},"mapper.geo.clear":{"description":"Push onto the stack a mapper to remove the location info from readings."},"mapper.geo.outside":{"description":"Filters the GTS, keeping only the points outside a geo zone"},"mapper.geo.within":{"description":"Filters the GTS, keeping only the points inside a geo zone"},"MACROFILTER":{"description":"Creates a filter from a macro."},"filter.byclass":{"description":"Selects the geo time series whose class name matches the filter parameter"},"filter.bylabels":{"description":"Selects the geo time series whose labels match the filter parameter"},"filter.last.eq":{"description":"Selects the geo time series whose last value equals the filter parameter"},"filter.last.ge":{"description":"Selects the geo time series whose last value is greater or equal to the filter parameter"},"filter.last.gt":{"description":"Selects the geo time series whose last value is greater than the filter parameter"},"filter.last.le":{"description":"Selects the geo time series whose last value is less or equal to the filter parameter"},"filter.last.lt":{"description":"Selects the geo time series whose last value is less than the filter parameter"},"filter.last.ne":{"description":"Selects the geo time series whose last value does not equal the filter parameter"},"FILTER":{"description":"Extract Geo Time Series which match some criteria"},"bucketizer.percentile":{"description":"Push onto the stack a bucketizer which returns the xth percentile of values in the interval to bucketize."},"MACROBUCKETIZER":{"description":"Converts a macro into a bucketizer"},"bucketizer.and":{"description":"Compute and between the values of the interval"},"bucketizer.count":{"description":"Return the number of values of the interval"},"bucketizer.first":{"description":"Return the first value of the interval"},"bucketizer.join":{"description":"Return a string concatenating all values"},"bucketizer.last":{"description":"Return the last value of the interval"},"bucketizer.max":{"description":"Return the maximum of the values of the interval"},"bucketizer.mean":{"description":"Return the mean of the values of the interval"},"bucketizer.median":{"description":"Return the median of the values of the interval"},"bucketizer.min":{"description":"Return the minimum of the values of the interval"},"bucketizer.or":{"description":"Compute or between the values of the interval"},"bucketizer.sum":{"description":"Return the sum of the values of the interval"},"BUCKETIZE":{"description":"Bucketize a Geo Time Series applying a bucketizer function"},"APPLY":{"description":"Apply a function to a set of Geo Time Series"},"op.add":{"description":"Produce values which are the sum of all parameter"},"op.and":{"description":"AND operand on values of multiple Geo Time Series"},"op.div":{"description":"Compute the division of its first parameter by the second one"},"op.eq":{"description":"Check values from N time Geo Time Series for equality"},"op.ge":{"description":"Check that values from N time series are greater opr equal to each other"},"op.gt":{"description":"Check that values from N time series are greater than each other"},"op.le":{"description":"Check that values from N time series are lesser or equal to each other"},"op.lt":{"description":"Check that values from N time series are lesser than each other"},"op.mask":{"description":"Eliminate values according to a mask"},"op.mul":{"description":"Produce values which are the product of all parameters"},"op.ne":{"description":"Check values from N time Geo Time Series for inequality"},"op.negmask":{"description":"Eliminate values according to a mask"},"op.or":{"description":"OR operand on values of multiple Geo Time Series"},"op.sub":{"description":"Compute the difference between its first and second parameters"},"MAXLONG":{"description":"Push Long.MAX_VALUE onto the stack"},"MINLONG":{"description":"Push Long.MIN_VALUE onto the stack"},"NULL":{"description":"Push the symbolic value NULL onto the stack"},"NaN":{"description":"Push the symbolic value `NaN` (Not a Number) onto the stack"},"PI":{"description":"Pushes PI onto the stack."},"e":{"description":"Push the value of e (2.71828....) onto the stack"},"pi":{"description":"Push the value of π (3.141592....) onto the stack"}}